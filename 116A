#include <iostream>
#include <bits/stdc++.h>
#include <algorithm>
using namespace std;
const int M = 1e9+7;


long long modulo(int a, int b)
{
	if (b==0) return 1;

	long long ans = modulo(a, b/2);

	if(b&1)
	{
		return (a * ((ans * ans) % M)) % M;
	}
	return (ans*ans)%M;
}




int calPow(int a, int b)
{
	if (b==0) return 1;

	int ans = calPow(a, b/2);

	if(b&1)
	{
		return a*ans*ans;
	}
	return ans*ans;
}


int gcd(int a, int b)
{
	
	if(a%b == 0)
	{
		return b;
	}
	
	return gcd(b, a%b);
	
}

int lcm(int a, int b)
{
	return (a*b)/gcd(a,b);	
}






int main()
{
	int n, a, b, c(0), m(0);
    scanf("%d", &n);
    while (n--)
    {
        scanf("%d%d", &a, &b);
        c -= a;
        c += b;
        if (c > m)
        {
            m = c;
        }
    }

    printf("%d\n", m);
	
	return 0;
}
