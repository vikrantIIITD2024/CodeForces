#include <iostream>
#include <bits/stdc++.h>
#include <algorithm>
using namespace std;
const int M = 1e9+7;


long long modulo(int a, int b)
{
	if (b==0) return 1;

	long long ans = modulo(a, b/2);

	if(b&1)
	{
		return (a * ((ans * ans) % M)) % M;
	}
	return (ans*ans)%M;
}




int calPow(int a, int b)
{
	if (b==0) return 1;

	int ans = calPow(a, b/2);

	if(b&1)
	{
		return a*ans*ans;
	}
	return ans*ans;
}


int gcd(int a, int b)
{
	
	if(a%b == 0)
	{
		return b;
	}
	
	return gcd(b, a%b);
	
}

int lcm(int a, int b)
{
	return (a*b)/gcd(a,b);	
}






int main()
{

    long long int k, n, w;
    cin>>k>>n>>w;
    int a = (2*k)+ (w-1)*k;
    int sum = (w/2)* a;
    if(sum <= n)
    {
    	cout<<"0";
    }
    else{
    	for(long long int i =1; i<=w; ++i) //i = 1, i<=1; ++i
    	{
    		n = n-i*k;

	    	// n = 2 - 1*1 = 1
    	}
    	cout<<(-n)<<endl;
    	}
    


    /*
    	cost of one banana(k) = 3 dollars(n) = 17 number of bananas he wants(w) = 4
    	1 banana = 3, 17-3 = 14
    	2 banana = 2*3 = 6, 14-6 = 8
    	3 banana = 3*3 = 9, 8-9 = -1
    	4 banana = 4*3 = 12, -1-12 = -13
    */
    
    	/*
    	if(k == w)
    	{

    	}
    	*/

    	// if(k == 1 && w == 1)
    	// {
    	// 	cout<<"0";
    	// }
    	// else{
    	// 	for(long long int i =1; i<=w; ++i) //i = 1, i<=1; ++i
    	// {
    	// 	n = n-i*k; //1st iteration = 17 - 1*3 = 14
	    // 	//2nd iteration = 14 - 2*3 = 8
	    // 	//3rd iteration = 8 - 3*3 = -1
	    // 	//4th iteration = -1 - 4*3 = -13

	    // 	// n = 2 - 1*1 = 1
    	// }
    	// cout<<(-n)<<endl;
    	// }
    	//.   k = 1, n = 2, w = 1
    
    	
    

    return 0;
}
