#include <iostream>
#include <bits/stdc++.h>
#include <algorithm>
using namespace std;
const int M = 1e9+7;


long long modulo(int a, int b)
{
	if (b==0) return 1;

	long long ans = modulo(a, b/2);

	if(b&1)
	{
		return (a * ((ans * ans) % M)) % M;
	}
	return (ans*ans)%M;
}




int calPow(int a, int b)
{
	if (b==0) return 1;

	int ans = calPow(a, b/2);

	if(b&1)
	{
		return a*ans*ans;
	}
	return ans*ans;
}


int gcd(int a, int b)
{
	
	if(a%b == 0)
	{
		return b;
	}
	
	return gcd(b, a%b);
	
}

int lcm(int a, int b)
{
	return (a*b)/gcd(a,b);	
}






int main()
{
	int n;
	cin>>n;
	int arr[n];
	for(int i =0; i<n; ++i)
	{
		cin>>arr[i];
	}
	int min_ele = INT_MAX;
	for(int i = 0; i<n; ++i)
	{
		min_ele = min(min_ele, arr[i]);
	}
	int indexOfElement = -1; 
	int ans = 0;
	for (int i = 0; i < n; ++i) {
        if (arr[i] == min_ele) {
            indexOfElement = i;
        }
    }
    
    for(int i =indexOfElement; i<n-1; ++i) //i = 1-->n
    {
    	if(arr[i+1] > arr[i]) // arr[2] < arr[1] 58<10
    	{ 
    		ans++;
    		swap(arr[i+1], arr[i]);
    	}
    }
    // cout<<"LOL: "<<arr[n-1];



	int max_ele = INT_MIN;
	for(int i = 0; i<n; ++i)
	{
		max_ele = max(max_ele, arr[i]);
	}
	int indexOfmaxElement = -1; 
	for (int i = 0; i < n; ++i) {
        if (arr[i] == max_ele) {
            indexOfmaxElement = i;
            break;
        }
    }
	ans += indexOfmaxElement; //7-4-1 = 5
	cout<<ans;


	return 0;
}
